buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            name 'PeopleNet Cloud'
            url 'http://artifactory.dev-tools.connectedfleet.io:8081/artifactory/repo'
        }
    }
    dependencies {
        classpath "com.peoplenet:gradle-plugins:${peoplenetGradlePluginVersion}"
        classpath "io.ratpack:ratpack-gradle:${ratpackVersion}"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.1"
    }
}

import static groovy.io.FileType.FILES

apply plugin: 'com.peoplenet.base'

ext.getImages = {
   List<String> imageTypes = []
    new File('.').eachFileRecurse(FILES) {
        if(it.name.endsWith('.yml') && it.name.startsWith('playbook-')) {
            String image = it.name.replace(".yml", "")
            image = image.replace("playbook-", "")
            imageTypes.add(image)
        }
    }
    return imageTypes
}

subprojects {
    apply plugin: 'com.peoplenet.groovy'

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.12'

        testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
        testCompile 'cglib:cglib-nodep:3.1'
        testCompile 'org.objenesis:objenesis:2.1'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

projects {
    apply plugin: 'idea'

    idea {
        project {
            jdkName = '1.8'
            languageLevel = '1.8'
            vcs = 'Git'
        }
    }
}

task clean() {
    doFirst {
        delete 'build', 'image.json'
    }
}

task imageTemplate(type: Copy) {
    from 'templates'
    into "${projectDir}"
    include 'image.json.groovytemplate'
    rename { file -> 'image.json'}
    expand(images : getImages(), version: version)
}

task build(dependsOn: 'imageTemplate') {
    doFirst {
        new File('build').mkdir()
        file('build/version').text = version.toString()
        String images = getImages().collect {
            "${it}-${version}"
        }.join(',')
        file('build/packer.properties').text = "images=${images}"
    }
}


